// Code generated by mockery v2.24.0. DO NOT EDIT.

package mocks

import (
	time "time"

	mock "github.com/stretchr/testify/mock"
)

// Communicator is an autogenerated mock type for the Communicator type
type Communicator struct {
	mock.Mock
}

// Done provides a mock function with given fields: started, method, status
func (_m *Communicator) Done(started time.Time, method string, status string) {
	_m.Called(started, method, status)
}

type mockConstructorTestingTNewCommunicator interface {
	mock.TestingT
	Cleanup(func())
}

// NewCommunicator creates a new instance of Communicator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewCommunicator(t mockConstructorTestingTNewCommunicator) *Communicator {
	mock := &Communicator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
