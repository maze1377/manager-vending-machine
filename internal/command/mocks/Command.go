// Code generated by mockery v2.24.0. DO NOT EDIT.

package mocks

import (
	machine "github.com/maze1377/manager-vending-machine/internal/machine"
	mock "github.com/stretchr/testify/mock"
)

// Command is an autogenerated mock type for the Command type
type Command struct {
	mock.Mock
}

// Execute provides a mock function with given fields: vm
func (_m *Command) Execute(vm machine.VendingState) error {
	ret := _m.Called(vm)

	var r0 error
	if rf, ok := ret.Get(0).(func(machine.VendingState) error); ok {
		r0 = rf(vm)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewCommand interface {
	mock.TestingT
	Cleanup(func())
}

// NewCommand creates a new instance of Command. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewCommand(t mockConstructorTestingTNewCommand) *Command {
	mock := &Command{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
